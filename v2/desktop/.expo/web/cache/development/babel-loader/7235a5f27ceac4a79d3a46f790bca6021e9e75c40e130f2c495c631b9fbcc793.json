{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { CURRENCIES, USES_FAHRENHEIT, USES_IMPERIAL, USES_RTL_LAYOUT } from \"./constants\";\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nfunction ensureCountryCode(countryCode) {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\nfunction splitLanguageTag(languageTag) {\n  var _languageTag$split = languageTag.split(\"-\"),\n    _languageTag$split2 = _slicedToArray(_languageTag$split, 2),\n    languageCode = _languageTag$split2[0],\n    countryCode = _languageTag$split2[1];\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode\n  };\n}\nfunction convertLanguageTagToLocale(languageTag, countryCodeFallback) {\n  var _splitLanguageTag = splitLanguageTag(languageTag),\n    languageCode = _splitLanguageTag.languageCode,\n    countryCode = _splitLanguageTag.countryCode;\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode,\n    languageTag: languageCode + \"-\" + countryCode,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode)\n  };\n}\nfunction getCurrentLocale() {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\nexport function getCalendar() {\n  return \"gregorian\";\n}\nexport function getCountry() {\n  var _navigator = navigator,\n    languages = _navigator.languages;\n  for (var i = 0; i < languages.length; i++) {\n    var _splitLanguageTag2 = splitLanguageTag(languages[i]),\n      countryCode = _splitLanguageTag2.countryCode;\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n  return \"US\";\n}\nexport function getCurrencies() {\n  var _navigator2 = navigator,\n    languages = _navigator2.languages;\n  var currencies = [];\n  languages.forEach(function (language) {\n    var _splitLanguageTag3 = splitLanguageTag(language),\n      countryCode = _splitLanguageTag3.countryCode;\n    if (countryCode) {\n      var currency = CURRENCIES[ensureCountryCode(countryCode)];\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n  return currencies;\n}\nexport function getLocales() {\n  var _navigator3 = navigator,\n    languages = _navigator3.languages;\n  var countryCode = getCountry();\n  var cache = [];\n  var locales = [];\n  languages.forEach(function (language) {\n    var locale = convertLanguageTagToLocale(language, countryCode);\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n  return locales;\n}\nexport function getNumberFormatSettings() {\n  var _getCurrentLocale = getCurrentLocale(),\n    languageTag = _getCurrentLocale.languageTag;\n  var formatter = new Intl.NumberFormat(languageTag);\n  var separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0]\n  };\n}\nexport function getTemperatureUnit() {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\nexport function getTimeZone() {\n  var _getCurrentLocale2 = getCurrentLocale(),\n    languageTag = _getCurrentLocale2.languageTag;\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\nexport function uses24HourClock() {\n  var _getCurrentLocale3 = getCurrentLocale(),\n    languageTag = _getCurrentLocale3.languageTag;\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\nexport function usesMetricSystem() {\n  return !USES_IMPERIAL.includes(getCountry());\n}\nexport function usesAutoDateAndTime() {\n  return;\n}\nexport function usesAutoTimeZone() {\n  return;\n}\nexport var handlers = new Set();\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", function () {\n    handlers.forEach(function (handler) {\n      return handler();\n    });\n  });\n}","map":{"version":3,"names":["CURRENCIES","USES_FAHRENHEIT","USES_IMPERIAL","USES_RTL_LAYOUT","canUseDOM","window","document","createElement","ensureCountryCode","countryCode","toUpperCase","splitLanguageTag","languageTag","_languageTag$split","split","_languageTag$split2","_slicedToArray","languageCode","convertLanguageTagToLocale","countryCodeFallback","_splitLanguageTag","toLowerCase","isRTL","includes","getCurrentLocale","navigator","language","getCountry","getCalendar","_navigator","languages","i","length","_splitLanguageTag2","getCurrencies","_navigator2","currencies","forEach","_splitLanguageTag3","currency","indexOf","push","getLocales","_navigator3","cache","locales","locale","getNumberFormatSettings","_getCurrentLocale","formatter","Intl","NumberFormat","separators","format","replace","decimalSeparator","groupingSeparator","getTemperatureUnit","getTimeZone","_getCurrentLocale2","DateTimeFormat","hour","resolvedOptions","timeZone","uses24HourClock","_getCurrentLocale3","Date","match","usesMetricSystem","usesAutoDateAndTime","usesAutoTimeZone","handlers","Set","addEventListener","handler"],"sources":["/Users/lilkizarmie/Documents/GitHub/pixEcoe/v2/destop/node_modules/react-native-localize/dist/module/module.web.ts"],"sourcesContent":["import {\n  CURRENCIES,\n  USES_FAHRENHEIT,\n  USES_IMPERIAL,\n  USES_RTL_LAYOUT,\n} from \"./constants\";\nimport type {\n  Calendar,\n  Locale,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nconst canUseDOM = !!(\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n);\n\nfunction ensureCountryCode(countryCode: string): string {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(\n  languageTag: string,\n): {\n  languageCode: string;\n  countryCode?: string;\n} {\n  const [languageCode, countryCode] = languageTag.split(\"-\");\n  return { languageCode, countryCode };\n}\n\nfunction convertLanguageTagToLocale(\n  languageTag: string,\n  countryCodeFallback: string,\n): Locale {\n  let { languageCode, countryCode } = splitLanguageTag(languageTag);\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n\n  return {\n    languageCode,\n    countryCode,\n    languageTag: `${languageCode}-${countryCode}`,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode),\n  };\n}\n\nfunction getCurrentLocale(): Locale {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar(): Calendar {\n  return \"gregorian\";\n}\n\nexport function getCountry(): string {\n  const { languages } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const { countryCode } = splitLanguageTag(languages[i]);\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nexport function getCurrencies(): string[] {\n  const { languages } = navigator;\n  const currencies: string[] = [];\n\n  languages.forEach((language) => {\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      const currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nexport function getLocales(): Locale[] {\n  const { languages } = navigator;\n  const countryCode = getCountry();\n  const cache: string[] = [];\n  const locales: Locale[] = [];\n\n  languages.forEach((language) => {\n    const locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n\n  return locales;\n}\n\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.NumberFormat(languageTag);\n  const separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0],\n  };\n}\n\nexport function getTemperatureUnit(): TemperatureUnit {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nexport function getTimeZone(): string {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nexport function uses24HourClock(): boolean {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nexport function usesMetricSystem(): boolean {\n  return !USES_IMPERIAL.includes(getCountry());\n}\n\nexport function usesAutoDateAndTime(): boolean | undefined {\n  return;\n}\n\nexport function usesAutoTimeZone(): boolean | undefined {\n  return;\n}\n\nexport const handlers: Set<Function> = new Set();\n\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", () => {\n    handlers.forEach((handler) => handler());\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}