{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as RNLocalize from \"react-native-localize\";\nimport en from \"../translations/en\";\nimport spa from \"../translations/spa\";\nvar LANGUAGES = {\n  en: en,\n  spa: spa\n};\nvar LANG_CODES = Object.keys(LANGUAGES);\nvar LANGUAGE_DETECTOR = {\n  type: \"languageDetector\",\n  async: true,\n  detect: function detect(callback) {\n    AsyncStorage.getItem(\"user-language\", function (err, language) {\n      if (err || !language) {\n        if (err) {\n          console.log(\"Error fetching Languages from asyncstorage \", err);\n        } else {\n          console.log(\"No language is set, choosing English as fallback\");\n        }\n        var findBestAvailableLanguage = RNLocalize.findBestAvailableLanguage(LANG_CODES);\n        callback(findBestAvailableLanguage.languageTag || \"spa\");\n        return;\n      }\n      callback(language);\n    });\n  },\n  init: function init() {},\n  cacheUserLanguage: function cacheUserLanguage(language) {\n    AsyncStorage.setItem(\"user-language\", language);\n  }\n};\ni18n.use(LANGUAGE_DETECTOR).use(initReactI18next).init({\n  resources: LANGUAGES,\n  react: {\n    useSuspense: false\n  },\n  interpolation: {\n    escapeValue: false\n  },\n  defaultNS: \"common\",\n  interpolation: {\n    escapeValue: false\n  }\n});","map":{"version":3,"names":["i18n","initReactI18next","AsyncStorage","RNLocalize","en","spa","LANGUAGES","LANG_CODES","Object","keys","LANGUAGE_DETECTOR","type","async","detect","callback","getItem","err","language","console","log","findBestAvailableLanguage","languageTag","init","cacheUserLanguage","setItem","use","resources","react","useSuspense","interpolation","escapeValue","defaultNS"],"sources":["/Users/lilkizarmie/Documents/GitHub/pixEcoe/v2/destop/src/constants/IMLocalize.js"],"sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as RNLocalize from \"react-native-localize\";\n\nimport en from \"../translations/en\";\nimport spa from \"../translations/spa\";\n\nconst LANGUAGES = {\n  en,\n  spa,\n};\n\nconst LANG_CODES = Object.keys(LANGUAGES);\n\nconst LANGUAGE_DETECTOR = {\n  type: \"languageDetector\",\n  async: true,\n  detect: (callback) => {\n    AsyncStorage.getItem(\"user-language\", (err, language) => {\n      if (err || !language) {\n        if (err) {\n          console.log(\"Error fetching Languages from asyncstorage \", err);\n        } else {\n          console.log(\"No language is set, choosing English as fallback\");\n        }\n        const findBestAvailableLanguage =\n          RNLocalize.findBestAvailableLanguage(LANG_CODES);\n\n        callback(findBestAvailableLanguage.languageTag || \"spa\");\n        return;\n      }\n      callback(language);\n    });\n  },\n  init: () => {},\n  cacheUserLanguage: (language) => {\n    AsyncStorage.setItem(\"user-language\", language);\n  },\n};\n\ni18n\n  // detect language\n  .use(LANGUAGE_DETECTOR)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // set options\n  .init({\n    resources: LANGUAGES,\n    react: {\n      useSuspense: false,\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n    defaultNS: \"common\",\n    interpolation: {\n      escapeValue: false,\n    },\n  });"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAO,KAAKC,UAAU,MAAM,uBAAuB;AAEnD,OAAOC,EAAE;AACT,OAAOC,GAAG;AAEV,IAAMC,SAAS,GAAG;EAChBF,EAAE,EAAFA,EAAE;EACFC,GAAG,EAAHA;AACF,CAAC;AAED,IAAME,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC;AAEzC,IAAMI,iBAAiB,GAAG;EACxBC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,SAARA,MAAMA,CAAGC,QAAQ,EAAK;IACpBZ,YAAY,CAACa,OAAO,CAAC,eAAe,EAAE,UAACC,GAAG,EAAEC,QAAQ,EAAK;MACvD,IAAID,GAAG,IAAI,CAACC,QAAQ,EAAE;QACpB,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEH,GAAG,CAAC;QACjE,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;QACjE;QACA,IAAMC,yBAAyB,GAC7BjB,UAAU,CAACiB,yBAAyB,CAACb,UAAU,CAAC;QAElDO,QAAQ,CAACM,yBAAyB,CAACC,WAAW,IAAI,KAAK,CAAC;QACxD;MACF;MACAP,QAAQ,CAACG,QAAQ,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EACDK,IAAI,EAAE,SAANA,IAAIA,CAAA,EAAQ,CAAC,CAAC;EACdC,iBAAiB,EAAE,SAAnBA,iBAAiBA,CAAGN,QAAQ,EAAK;IAC/Bf,YAAY,CAACsB,OAAO,CAAC,eAAe,EAAEP,QAAQ,CAAC;EACjD;AACF,CAAC;AAEDjB,IAAI,CAEDyB,GAAG,CAACf,iBAAiB,CAAC,CAEtBe,GAAG,CAACxB,gBAAgB,CAAC,CAErBqB,IAAI,CAAC;EACJI,SAAS,EAAEpB,SAAS;EACpBqB,KAAK,EAAE;IACLC,WAAW,EAAE;EACf,CAAC;EACDC,aAAa,EAAE;IACbC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE,QAAQ;EACnBF,aAAa,EAAE;IACbC,WAAW,EAAE;EACf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}